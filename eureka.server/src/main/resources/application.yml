---
spring:
  profiles: peer1
server:
  port: 8761
eureka:
  instance:
    hostname: peer1
    #ipAddress: 192.168.1.102
    preferIpAddress: false
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 5
  client:
    serviceUrl:
      defaultZone: http://peer1:8761/eureka/,http://peer2:8762/eureka/
    registerWithEureka: false
    fetchRegistry: false

---
spring:
  profiles: peer2
server:
  port: 8762
eureka:
  instance:
    hostname: peer2
    #ipAddress: 192.168.1.102
    preferIpAddress: false
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 5
  client:
    serviceUrl:
      defaultZone: http://peer1:8761/eureka/,http://peer2:8762/eureka/
    registerWithEureka: false
    fetchRegistry: false 
    
    
#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true
#eureka.client.serviceUrl.defaultZone=http://192.168.1.102:8761/eureka/,http://192.168.1.102:8762/eureka/

#eureka.instance.ipAddress=192.168.1.102
#eureka.instance.preferIpAddress=true

# Make sure eureka server can detect whether this app is up or down. Add by Zhang Chao.
#eureka.instance.lease-renewal-interval-in-seconds=5
#eureka.instance.lease-expiration-duration-in-seconds=5
